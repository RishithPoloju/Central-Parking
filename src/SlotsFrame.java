
import java.awt.Color;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Poloj
 */
public class SlotsFrame extends javax.swing.JFrame {
    public static JButton[] slotArray;
    public static int index;
static Connection con;
static Statement stmt;
static ResultSet rs;
    /**
     * Creates new form SlotsFrame
     */
    public SlotsFrame() {
        try {
            initComponents();
            SlotsFrame.slotArray = new JButton[]{slot1, slot2, slot3, slot4, slot5, slot6, slot7, slot8, slot9, slot10};
            buttonColor();
        } catch (SQLException ex) {
            Logger.getLogger(SlotsFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    public static void buttonColor() throws SQLException
    {
        //stmt=MainFrame.con.createStatement();
        int i=0;
        String SQL="SELECT occupied FROM HAREESH.ENTRIES";
        rs = MainFrame.stmt.executeQuery( SQL );
        while(rs.next())
        {
            if(rs.getBoolean("occupied")==false)
                slotArray[i].setBackground(Color.GREEN);
            else
                slotArray[i].setBackground(Color.RED); 
            i++;
        }
        rs.close();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton9 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        slot1 = new javax.swing.JButton();
        slot2 = new javax.swing.JButton();
        slot3 = new javax.swing.JButton();
        slot4 = new javax.swing.JButton();
        slot5 = new javax.swing.JButton();
        slot6 = new javax.swing.JButton();
        slot7 = new javax.swing.JButton();
        slot8 = new javax.swing.JButton();
        slot9 = new javax.swing.JButton();
        slot10 = new javax.swing.JButton();

        jButton9.setText("jButton9");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Parking Slots");

        jPanel1.setLayout(new java.awt.GridLayout(5, 2, 10, 10));

        slot1.setBackground(new java.awt.Color(153, 255, 0));
        slot1.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        slot1.setText("Slot 1");
        slot1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                slot1ActionPerformed(evt);
            }
        });
        jPanel1.add(slot1);

        slot2.setBackground(new java.awt.Color(153, 255, 0));
        slot2.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        slot2.setText("Slot 2");
        slot2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                slot2ActionPerformed(evt);
            }
        });
        jPanel1.add(slot2);

        slot3.setBackground(new java.awt.Color(153, 255, 0));
        slot3.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        slot3.setText("Slot 3");
        slot3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                slot3ActionPerformed(evt);
            }
        });
        jPanel1.add(slot3);

        slot4.setBackground(new java.awt.Color(153, 255, 0));
        slot4.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        slot4.setText("Slot 4");
        slot4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                slot4ActionPerformed(evt);
            }
        });
        jPanel1.add(slot4);

        slot5.setBackground(new java.awt.Color(153, 255, 0));
        slot5.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        slot5.setText("Slot 5");
        slot5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                slot5ActionPerformed(evt);
            }
        });
        jPanel1.add(slot5);

        slot6.setBackground(new java.awt.Color(153, 255, 0));
        slot6.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        slot6.setText("Slot 6");
        slot6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                slot6ActionPerformed(evt);
            }
        });
        jPanel1.add(slot6);

        slot7.setBackground(new java.awt.Color(153, 255, 0));
        slot7.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        slot7.setText("Slot 7");
        slot7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                slot7ActionPerformed(evt);
            }
        });
        jPanel1.add(slot7);

        slot8.setBackground(new java.awt.Color(153, 255, 0));
        slot8.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        slot8.setText("Slot 8");
        slot8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                slot8ActionPerformed(evt);
            }
        });
        jPanel1.add(slot8);

        slot9.setBackground(new java.awt.Color(153, 255, 0));
        slot9.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        slot9.setText("Slot 9");
        slot9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                slot9ActionPerformed(evt);
            }
        });
        jPanel1.add(slot9);

        slot10.setBackground(new java.awt.Color(153, 255, 0));
        slot10.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        slot10.setText("Slot 10");
        slot10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                slot10ActionPerformed(evt);
            }
        });
        jPanel1.add(slot10);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 663, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void slot1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_slot1ActionPerformed
        try {
            // TODO add your handling code here:
            index=0;
            String ind=Integer.toString(index+1);
            String SQL="SELECT * FROM Hareesh.Entries where slot="+ind;
            rs=MainFrame.stmt.executeQuery(SQL);
            rs.next();
            if(rs.getBoolean("occupied")==false)
            {

                EntryFrame ef=new EntryFrame();
                ef.setVisible(true);
            }
            else
            {
                DetailsFrame df=new DetailsFrame();
                int response = JOptionPane.showConfirmDialog (null, "Slot occupied ,Show Slot Details ?","Message",JOptionPane.YES_NO_OPTION);
                if(response==JOptionPane.YES_OPTION)
                {
                    df.setVisible(true);
                }
                if(response==JOptionPane.NO_OPTION)
                {
                    df.dispose();
                }
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(SlotsFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_slot1ActionPerformed

    private void slot2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_slot2ActionPerformed
        try {
            // TODO add your handling code here:
            index=1;
            String ind=Integer.toString(index+1);
            String SQL="SELECT * FROM Hareesh.Entries where slot="+ind;
            rs=MainFrame.stmt.executeQuery(SQL);
            rs.next();
            if(rs.getBoolean("occupied")==false)
            {

                EntryFrame ef=new EntryFrame();
                ef.setVisible(true);
            }
            else
            {
                DetailsFrame df=new DetailsFrame();
                int response = JOptionPane.showConfirmDialog (null, "Slot occupied ,Show Slot Details ?","Message",JOptionPane.YES_NO_OPTION);
                if(response==JOptionPane.YES_OPTION)
                {
                    df.setVisible(true);
                }
                if(response==JOptionPane.NO_OPTION)
                {
                    df.dispose();
                }
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(SlotsFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_slot2ActionPerformed

    private void slot3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_slot3ActionPerformed
        try {
            // TODO add your handling code here:
            index=2;
            String ind=Integer.toString(index+1);
            String SQL="SELECT * FROM Hareesh.Entries where slot="+ind;
            rs=MainFrame.stmt.executeQuery(SQL);
            rs.next();
            if(rs.getBoolean("occupied")==false)
            {

                EntryFrame ef=new EntryFrame();
                ef.setVisible(true);
            }
            else
            {
                DetailsFrame df=new DetailsFrame();
                int response = JOptionPane.showConfirmDialog (null, "Slot occupied ,Show Slot Details ?","Message",JOptionPane.YES_NO_OPTION);
                if(response==JOptionPane.YES_OPTION)
                {
                    df.setVisible(true);
                }
                if(response==JOptionPane.NO_OPTION)
                {
                    df.dispose();
                }
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(SlotsFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_slot3ActionPerformed

    private void slot4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_slot4ActionPerformed
        try {
            // TODO add your handling code here:
            index=3;
            String ind=Integer.toString(index+1);
            String SQL="SELECT * FROM Hareesh.Entries where slot="+ind;
            rs=MainFrame.stmt.executeQuery(SQL);
            rs.next();
            if(rs.getBoolean("occupied")==false)
            {

                EntryFrame ef=new EntryFrame();
                ef.setVisible(true);
            }
            else
            {
                DetailsFrame df=new DetailsFrame();
                int response = JOptionPane.showConfirmDialog (null, "Slot occupied ,Show Slot Details ?","Message",JOptionPane.YES_NO_OPTION);
                if(response==JOptionPane.YES_OPTION)
                {
                    df.setVisible(true);
                }
                if(response==JOptionPane.NO_OPTION)
                {
                    df.dispose();
                }
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(SlotsFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_slot4ActionPerformed

    private void slot5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_slot5ActionPerformed
        // TODO add your handling code here:
        
        try {
            index=4;
            String ind=Integer.toString(index+1);
            String SQL="SELECT * FROM Hareesh.Entries where slot="+ind;
            rs=MainFrame.stmt.executeQuery(SQL);
            rs.next();
            if(rs.getBoolean("occupied")==false)
            {

                EntryFrame ef=new EntryFrame();
                ef.setVisible(true);
            }
            else
            {
                DetailsFrame df=new DetailsFrame();
                int response = JOptionPane.showConfirmDialog (null, "Slot occupied ,Show Slot Details ?","Message",JOptionPane.YES_NO_OPTION);
                if(response==JOptionPane.YES_OPTION)
                {
                    df.setVisible(true);
                }
                if(response==JOptionPane.NO_OPTION)
                {
                    df.dispose();
                }
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(SlotsFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_slot5ActionPerformed

    private void slot6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_slot6ActionPerformed
        try {
            // TODO add your handling code here:
            index=5;
            String ind=Integer.toString(index+1);
            String SQL="SELECT * FROM Hareesh.Entries where slot="+ind;
            rs=MainFrame.stmt.executeQuery(SQL);
            rs.next();
            if(rs.getBoolean("occupied")==false)
            {

                EntryFrame ef=new EntryFrame();
                ef.setVisible(true);
            }
            else
            {
                DetailsFrame df=new DetailsFrame();
                int response = JOptionPane.showConfirmDialog (null, "Slot occupied ,Show Slot Details ?","Message",JOptionPane.YES_NO_OPTION);
                if(response==JOptionPane.YES_OPTION)
                {
                    df.setVisible(true);
                }
                if(response==JOptionPane.NO_OPTION)
                {
                    df.dispose();
                }
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(SlotsFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_slot6ActionPerformed

    private void slot7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_slot7ActionPerformed
        try {
            // TODO add your handling code here:
            index=6;
            String ind=Integer.toString(index+1);
            String SQL="SELECT * FROM Hareesh.Entries where slot="+ind;
            rs=MainFrame.stmt.executeQuery(SQL);
            rs.next();
            if(rs.getBoolean("occupied")==false)
            {

                EntryFrame ef=new EntryFrame();
                ef.setVisible(true);
            }
            else
            {
                DetailsFrame df=new DetailsFrame();
                int response = JOptionPane.showConfirmDialog (null, "Slot occupied ,Show Slot Details ?","Message",JOptionPane.YES_NO_OPTION);
                if(response==JOptionPane.YES_OPTION)
                {
                    df.setVisible(true);
                }
                if(response==JOptionPane.NO_OPTION)
                {
                    df.dispose();
                }
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(SlotsFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_slot7ActionPerformed

    private void slot8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_slot8ActionPerformed
        try {
            // TODO add your handling code here:
            index=7;
            String ind=Integer.toString(index+1);
            String SQL="SELECT * FROM Hareesh.Entries where slot="+ind;
            rs=MainFrame.stmt.executeQuery(SQL);
            rs.next();
            if(rs.getBoolean("occupied")==false)
            {

                EntryFrame ef=new EntryFrame();
                ef.setVisible(true);
            }
            else
            {
                DetailsFrame df=new DetailsFrame();
                int response = JOptionPane.showConfirmDialog (null, "Slot occupied ,Show Slot Details ?","Message",JOptionPane.YES_NO_OPTION);
                if(response==JOptionPane.YES_OPTION)
                {
                    df.setVisible(true);
                }
                if(response==JOptionPane.NO_OPTION)
                {
                    df.dispose();
                }
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(SlotsFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_slot8ActionPerformed

    private void slot9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_slot9ActionPerformed
        try {
            // TODO add your handling code here:
            index=8;
            String ind=Integer.toString(index+1);
            String SQL="SELECT * FROM Hareesh.Entries where slot="+ind;
            rs=MainFrame.stmt.executeQuery(SQL);
            rs.next();
            if(rs.getBoolean("occupied")==false)
            {

                EntryFrame ef=new EntryFrame();
                ef.setVisible(true);
            }
            else
            {
                DetailsFrame df=new DetailsFrame();
                int response = JOptionPane.showConfirmDialog (null, "Slot occupied ,Show Slot Details ?","Message",JOptionPane.YES_NO_OPTION);
                if(response==JOptionPane.YES_OPTION)
                {
                    df.setVisible(true);
                }
                if(response==JOptionPane.NO_OPTION)
                {
                    df.dispose();
                }
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(SlotsFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_slot9ActionPerformed

    private void slot10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_slot10ActionPerformed
        try {
            // TODO add your handling code here:
            index=9;
            String ind=Integer.toString(index+1);
            String SQL="SELECT * FROM Hareesh.Entries where slot="+ind;
            rs=MainFrame.stmt.executeQuery(SQL);
            rs.next();
            if(rs.getBoolean("occupied")==false)
            {

                EntryFrame ef=new EntryFrame();
                ef.setVisible(true);
            }
            else
            {
                DetailsFrame df=new DetailsFrame();
                int response = JOptionPane.showConfirmDialog (null, "Slot occupied ,Show Slot Details ?","Message",JOptionPane.YES_NO_OPTION);
                if(response==JOptionPane.YES_OPTION)
                {
                    df.setVisible(true);
                }
                if(response==JOptionPane.NO_OPTION)
                {
                    df.dispose();
                }
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(SlotsFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_slot10ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SlotsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SlotsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SlotsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SlotsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SlotsFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton slot1;
    private javax.swing.JButton slot10;
    private javax.swing.JButton slot2;
    private javax.swing.JButton slot3;
    private javax.swing.JButton slot4;
    private javax.swing.JButton slot5;
    private javax.swing.JButton slot6;
    private javax.swing.JButton slot7;
    private javax.swing.JButton slot8;
    private javax.swing.JButton slot9;
    // End of variables declaration//GEN-END:variables
}
